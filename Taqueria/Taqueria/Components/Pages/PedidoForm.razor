@page "/pedidos/editar/{Id:int}"
@page "/pedidos/nueva"
@using Taqueria.Repositorio
@rendermode InteractiveServer
@inject NavigationManager _navigator;
@inject IRepositorioPedido _repositorio;
<h2>@_mensaje Pedido</h2>
<EditForm Model="_pedido" FormName="frmPedido" OnValidSubmit="Guardar">
    <DataAnnotationsValidator />
    <div class="row mb-3">
        <label for="txtFecha" class="col-2 col-form-label">Fecha</label>
        <div class="col-10">
            <input type="date" id="txtFecha" class="form-control" @bind="_pedido.Fecha" />
            <ValidationMessage For="()=>_pedido.Fecha" />
        </div>
    </div>

    <div class="row mb-3">
        <label for="txtHora" class="col-2 col-form-label">Hora</label>
        <div class="col-10">
            <input type="time" id="txtHora" class="form-control" @bind="_pedido.HoraPedido" />
            <ValidationMessage For="()=>_pedido.HoraPedido" />
        </div>
    </div>
    <div class="row mb-3">
        <label for="txtEstado" class="col-2 col-form-label">Estado</label>
        <div class="col-10">
            <InputSelect class="form-select" @bind-Value="_pedido.EstadoPedido">
                <option value="0" enabled="enabled">Seleccione un estado...</option>
                <option value="En Proceso">En proceso</option>
                <option value="Enviado">Enviado</option>
                <option value="Entregado">Entregado</option>
            </InputSelect>
            <ValidationMessage For="()=>_pedido.EstadoPedido" />
        </div> 
    </div>

    <div class="row mb-3">
        <label for="txtPersona" class="col-2 col-form-label">Persona</label>
        <div class="col-10">
            <InputSelect class="form-select" @bind-Value="_pedido.PersonaId">
                <option value="0" enabled="enabled">Seleccione una persona...</option>
                @foreach(Persona persona in _personas)
                {
                    <option value="@persona.Id">@persona.Nombre</option>
                }
            </InputSelect>
            <ValidationMessage For="()=>_pedido.PersonaId" />
        </div>
    </div>
    <button type="submit" class="btn btn-primary">Guardar</button>
    <button class="btn btn-danger ms-3" @onclick="Cancelar" @onclick:preventDefault>Cancelar</button>
</EditForm>

@code {
    [Parameter]
    public int Id { get; set; }
    private string _mensaje = "";
    private Pedido? _pedido = new();
    private List<Persona> _personas = new(); 

    protected override async Task OnInitializedAsync()
    {
        _personas = await _repositorio.GetPersonas();
        if (Id > 0)
        {
            _pedido = await _repositorio.Get(Id);
            _mensaje = "Modificar";
        } 
        else
        {
            _mensaje = "Nueva";
        }
    }

    private async void Guardar()
    {
        if (Id > 0)
        {
            await _repositorio.Update(Id, _pedido!);
        }
        else
        {
            await _repositorio.Add(_pedido!);
        }
        Cancelar();
    }

    private void Cancelar()
    {
        _navigator.NavigateTo("/pedidos");
    }
}